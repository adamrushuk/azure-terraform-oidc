# terraform - github workflow
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: terraform

on:
  push:
  # enable manual workflow
  workflow_dispatch:
    inputs: {}

# permissions for oidc login
# https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect
permissions:
  id-token: write # required for requesting JWT
  contents: read

env:
  PREFIX: arshz
  LOCATION: eastus

  # debug
  CI_DEBUG: true

  # azure auth from secrets
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}

  # terraform
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_LOG: "DEBUG" # https://developer.hashicorp.com/terraform/internals/debugging
  TF_VERSION: "1.3.3" # https://github.com/hashicorp/terraform/releases

  # Env var concatenation is currently not supported at Workflow or Job scope. See workaround below:
  # https://github.community/t5/GitHub-Actions/How-can-we-concatenate-multiple-env-vars-at-workflow-and-job/td-p/48489

jobs:
  terraform:
    runs-on: ubuntu-22.04

    # only run if owner triggered action
    if: github.actor == github.event.repository.owner.login

    steps:
      # checkout
      # https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v3

      # init tasks - env var concatenation
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
      - name: Init tasks - inc Env var concatenation (Workaround)
        run: |
          echo "TERRAFORM_STORAGE_ACCOUNT=${{ env.PREFIX }}sttfstate${{ env.LOCATION }}" >> $GITHUB_ENV
          echo "TERRAFORM_STORAGE_RG=${{ env.PREFIX }}-rg-tfstate" >> $GITHUB_ENV

      # login
      # https://github.com/Azure/login
      - name: Login via OIDC to Azure Public Cloud (az cli and az powershell)
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # terraform
      # https://github.com/hashicorp/setup-terraform
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          terraform_wrapper: false # temp fix to stop set-output deprecation warnings

      - name: Terraform Init / Validate / Apply
        run: |
          terraform init \
            -backend-config="resource_group_name=$TERRAFORM_STORAGE_RG" \
            -backend-config="storage_account_name=$TERRAFORM_STORAGE_ACCOUNT"

          # validate
          terraform validate

          # apply
          terraform apply -auto-approve
